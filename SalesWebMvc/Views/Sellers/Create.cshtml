@model SalesWebMvc.Models.ViewModels.SellerFormViewModel
@*
    Declaração acima diz que a View tem à disposição dela o objeto Seller. Como um "using"

    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@{
    ViewData["Title"] = "Create";
}

<h2>@ViewData["Title"]</h2> @*Pode ser escrito em forma de texto, mas, aproveitou o recurso de título acima*@

<h4>Seller</h4>
<hr />
@*Saltar linha*@
<div class="row">
    @*Garante a ocupação total da tela*@
    <div class="col-md-4">
        @*Ocupação de 1/3 da tela, pois, o bootstrap divide a tela em 12partes/3 = 4 *@
        <form asp-action="Create">
            @*Define que quando enviar o formulário, irá chamar a ação Create no método post no controlador*@
            <div asp-validation-summary="All" class="text-danger"></div>
            @*Para habilitar as validações de usuários no navegador*@
            <div class="form-group">
                <label asp-for="Seller.Name" class="control-label"></label>
                @*TagHelper que define o label para digitar a informação. Campo: Name da classe Seller*@
                <input asp-for="Seller.Name" class="form-control" />
                @*Para inserir a mensagem de validação perto de cada campo*@
                <span asp-validation-for="Seller.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Seller.Email" class="control-label"></label>
                @*TagHelper que define o label para digitar a informação. Campo: Name da classe Seller*@
                <input asp-for="Seller.Email" class="form-control" />
                @*Para inserir a mensagem de validação perto de cada campo*@
                <span asp-validation-for="Seller.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Seller.BirthDate" class="control-label"></label>
                @*TagHelper que define o label para digitar a informação. Campo: Name da classe Seller*@
                <input asp-for="Seller.BirthDate" class="form-control" />
                @*Para inserir a mensagem de validação perto de cada campo*@
                <span asp-validation-for="Seller.BirthDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Seller.BaseSalary" class="control-label"></label>
                @*TagHelper que define o label para digitar a informação. Campo: Name da classe Seller*@
                <input asp-for="Seller.BaseSalary" class="form-control" />
                @*Para inserir a mensagem de validação perto de cada campo*@
                <span asp-validation-for="Seller.BaseSalary" class="text-danger"></span>
            </div>
            @*select=caixa de seleção do html - TagHelper asp-items = constroe os intens ca caixa de seleção com base
                em uma coleção informada. Tem 3 argumentos =
                Fonte de dados(lista de departamentos do viewModels), a chave do  obj "Id" e o atributo visível "Name"*@
            <div class="form-group">
                <label asp-for="Seller.DepartmentId" class="control-label"></label>
                <select asp-for="Seller.DepartmentId" asp-items="@(new SelectList(Model.Departments,"Id",
                                                                    "Name"))" class="form-control"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
@*Habilita validação dos dados do usuário no nível e por meio de java script, do lado do cliente*@